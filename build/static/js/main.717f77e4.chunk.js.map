{"version":3,"sources":["config/firebase.js","components/auth/Login.js","components/auth/SignUp.js","components/header/TopTab.js","containers/Admin.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","redirect","setRedirect","isMounted","useIsMounted","handleLogin","e","a","preventDefault","auth","signInWithEmailAndPassword","catch","err","current","message","setTimeout","to","Container","component","maxWidth","CssBaseline","className","Avatar","color","Typography","variant","noValidate","Alert","severity","TextField","required","fullWidth","id","label","name","autoComplete","value","onChange","target","autoFocus","type","Button","onClick","Grid","container","item","xs","SignUp","firstName","setFirstName","lastName","setLastName","style","marginBottom","sm","createUserWithEmailAndPassword","then","result","user","updateProfile","displayName","error","handleSignUp","justify","withStyles","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","textDecoration","common","white","button","borderColor","props","onDrawerToggle","logout","Fragment","AppBar","position","elevation","Toolbar","IconButton","aria-label","Link","handleLogout","href","src","title","fontSize","paddingLeft","paddingRight","textAlign","Admin","setName","isLogin","setIsLogin","useEffect","onAuthStateChanged","signOut","Card","root","CardContent","gutterBottom","App","path","exact","createMuiTheme","primary","light","dark","linear","typography","useNextVariants","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.717f77e4.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDBwXnMsczR4_i08rWv-8DCjMi8L0A1Vi8\",\r\n    authDomain: \"listkoo-e57bd.firebaseapp.com\",\r\n    databaseURL: \"https://listkoo-e57bd.firebaseio.com\",\r\n    projectId: \"listkoo-e57bd\",\r\n    storageBucket: \"listkoo-e57bd.appspot.com\",\r\n    messagingSenderId: \"88708603617\",\r\n    appId: \"1:88708603617:web:99fcc12978bf122de6a1a0\"\r\n  };\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from './../../config/firebase'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport useIsMounted from 'ismounted';\r\n\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  CssBaseline,\r\n  Button,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [successMessage, setSuccessMessage] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [redirect, setRedirect] = useState(false)\r\n  const isMounted = useIsMounted();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    if (email === '' || password === '') {\r\n      setErrorMessage('Email and Password cannot be empty.')\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n    const user = await firebase.auth().signInWithEmailAndPassword(email, password).catch(err => {\r\n      if(isMounted.current) {\r\n        setIsLoading(false)\r\n        setErrorMessage(err.message)\r\n      }\r\n      return null\r\n    })\r\n    if (user) {\r\n      if(isMounted.current) {\r\n        setIsLoading(false)\r\n        setErrorMessage('')\r\n        setSuccessMessage('Login Successfully!')\r\n      }\r\n      setTimeout(() => {\r\n        if(isMounted.current) setRedirect(true)\r\n      }, 400)\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon color=\"primary\"/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          {\r\n            successMessage && (<Alert severity=\"success\">{successMessage}</Alert>)\r\n          }\r\n          {\r\n            isLoading ? (<Alert severity=\"warning\">Please wait...</Alert>) :\r\n            errorMessage && (<Alert severity=\"error\">{errorMessage}</Alert>)\r\n          }\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={(e) => handleLogin(e)}\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from './../../config/firebase'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useIsMounted from 'ismounted';\r\n\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  CssBaseline,\r\n  Button,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [successMessage, setSuccessMessage] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const isMounted = useIsMounted();\r\n\r\n  const handleSignUp = (e) => {\r\n    e.preventDefault()\r\n    if (email && password) {\r\n      setIsLoading(true)\r\n      firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then((result) => {\r\n          return result.user.updateProfile({\r\n            displayName: `${firstName} ${lastName}`,\r\n          }).then(() => {\r\n            if(isMounted.current) {\r\n              setIsLoading(false)\r\n              setErrorMessage('')\r\n              setSuccessMessage('Signed Up Successfully')\r\n            }\r\n            setTimeout(() => {\r\n              if(isMounted.current) {\r\n                setFirstName('')\r\n                setLastName('')\r\n                setPassword('')\r\n                setEmail('')\r\n                setRedirect(true)\r\n              }\r\n            }, 300)\r\n          })\r\n        })\r\n        .catch(error => {\r\n          if(isMounted.current) {\r\n            setErrorMessage(error.message)\r\n            setIsLoading(false)\r\n          }\r\n        })\r\n    } else {\r\n      if(isMounted.current) setErrorMessage('Email & Password cannot be empty!')\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/login\" />\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <CreateIcon color=\"primary\" />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          {\r\n            successMessage && (<Alert style={{marginBottom:15}} severity=\"success\">{successMessage}</Alert>)\r\n          }\r\n          {\r\n            isLoading ? (<Alert style={{marginBottom:15}} severity=\"warning\">Please wait...</Alert>) : null\r\n          }\r\n          {\r\n            errorMessage && (<Alert style={{marginBottom:15}} severity=\"error\">{errorMessage}</Alert>)\r\n          }\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                value={firstName}\r\n                onChange={(e)=> setFirstName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={lastName}\r\n                onChange={(e)=> setLastName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e)=> setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e)=>handleSignUp(e)}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction TopTab(props) {\r\n  const { classes, onDrawerToggle, logout } = props;\r\n\r\n  const handleLogout = e => {\r\n    e.preventDefault()\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Grid item>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={onDrawerToggle}\r\n                className={classes.menuButton}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Link onClick={(e)=> handleLogout(e) }className={classes.link} href=\"#\" variant=\"body2\">\r\n                Logout\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nTopTab.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TopTab);","import React, { useEffect, useState } from 'react'\r\nimport firebase from './../config/firebase'\r\nimport TopTab from './../components/header/TopTab'\r\nimport { Redirect } from 'react-router-dom'\r\nimport useIsMounted from 'ismounted';\r\n\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    Card,\r\n    CssBaseline,\r\n    CardContent,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        paddingLeft:30,\r\n        paddingRight:30,\r\n        textAlign:'center',\r\n        marginBottom:0\r\n    },\r\n    name: {\r\n        fontSize:20,\r\n        textAlign:'center'\r\n    }\r\n}));\r\n\r\nexport default function Admin() {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState('')\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const isMounted = useIsMounted();\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                if (isMounted.current) {\r\n                    setIsLogin(true)\r\n                    setName(user.displayName)\r\n                }\r\n            } else {\r\n                if (isMounted.current) {\r\n                    setIsLogin(false)\r\n                }\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        firebase.auth().signOut()\r\n    }\r\n\r\n    if (!isLogin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TopTab logout={() => handleLogout()} />\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Card className={classes.root} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n                                Welcome\r\n                            </Typography>\r\n                            <Typography className={classes.name} color=\"textSecondary\" gutterBottom>\r\n                                { name }\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './components/auth/Login'\nimport SignUp from './components/auth/SignUp';\nimport Admin from './containers/Admin';\n\nconst App = () => {\n  return <Fragment>\n    <Router>\n      <Route path=\"/\" exact component={Admin} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/signup\" exact component={SignUp} />\n    </Router>\n  </Fragment>\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'typeface-roboto';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport './assets/sass/global-style.scss'\n\nconst theme = createMuiTheme({\n  palette: {\n     primary: {\n        light: '#fff',\n        main: '#fb5533',\n        dark: '#000',\n        linear: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n     },\n     secondary: {\n       main: '#eee',\n     },\n  },\n  typography: { \n     useNextVariants: true\n  }\n});\n\nReactDOM.render(\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}